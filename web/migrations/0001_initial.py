# Generated by Django 4.2.5 on 2023-09-07 07:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='slug')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='description')),
                ('site', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('file', models.FileField(upload_to='files/', verbose_name='file')),
                ('type', models.CharField(max_length=10, verbose_name='type')),
                ('site', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('order', models.IntegerField(default=0, verbose_name='order')),
                ('site', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
            ],
            options={
                'verbose_name': 'menu',
                'verbose_name_plural': 'menus',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('post', 'Post'), ('page', 'Page')], default='post', max_length=4, verbose_name='type')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('slug', models.SlugField(help_text='This will be part of the page URL.', max_length=200, unique=True, verbose_name='slug')),
                ('content', tinymce.models.HTMLField(blank=True, verbose_name='content')),
                ('excerpt', models.CharField(blank=True, max_length=500, null=True, verbose_name='excerpt')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='published at')),
                ('order', models.IntegerField(default=0, verbose_name='order')),
                ('views', models.PositiveIntegerField(default=0, verbose_name='views')),
                ('likes', models.PositiveIntegerField(default=0, verbose_name='likes')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
                ('allow_comments', models.BooleanField(default=True, verbose_name='allow comments')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='author')),
                ('categories', models.ManyToManyField(to='web.category', verbose_name='categories')),
                ('cover_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.file', verbose_name='cover image')),
                ('site', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
            ],
            options={
                'verbose_name': 'post',
                'verbose_name_plural': 'posts',
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='description')),
                ('template_content', models.TextField(blank=True)),
                ('template_file', models.FileField(blank=True, null=True, upload_to='templates/', verbose_name='template from file')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
            ],
            options={
                'verbose_name': 'Plantilla',
                'verbose_name_plural': 'Plantillas',
            },
        ),
        migrations.CreateModel(
            name='Widget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.SlugField(unique=True)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='description')),
                ('content', models.TextField(verbose_name='content')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('site', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
            ],
            options={
                'verbose_name': 'widget',
                'verbose_name_plural': 'widget',
            },
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='description')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='themes/thumbnails/', verbose_name='thumbnail')),
                ('css', models.TextField(blank=True)),
                ('js', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('default_template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='web.template')),
                ('site', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
            ],
            options={
                'verbose_name': 'theme',
                'verbose_name_plural': 'themes',
            },
        ),
        migrations.AddField(
            model_name='template',
            name='theme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates', to='web.theme', verbose_name='theme'),
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='name')),
                ('site', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
            ],
            options={
                'verbose_name': 'tag',
                'verbose_name_plural': 'tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SiteConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_title', models.CharField(max_length=200, verbose_name='site title')),
                ('site_description', models.CharField(max_length=500, verbose_name='site description')),
                ('favicon', models.ImageField(upload_to='favicon/', verbose_name='favicon')),
                ('comment_form_button_label', models.CharField(default='Send', max_length=100, verbose_name='comment form button label')),
                ('comment_form_textarea_cols', models.PositiveSmallIntegerField(default=10, verbose_name='comment form textarea cols')),
                ('comment_form_textarea_rows', models.PositiveSmallIntegerField(default=3, verbose_name='comment form textarea cols')),
                ('homepage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.post', verbose_name='homepage')),
                ('site', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
                ('site_logo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.file', verbose_name='site logo')),
                ('theme', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.theme')),
            ],
            options={
                'verbose_name': 'site config',
                'verbose_name_plural': 'site configs',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attrs', models.JSONField(blank=True, default=dict, null=True)),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('content', tinymce.models.HTMLField()),
                ('location', models.CharField(choices=[('header', 'header'), ('main', 'main'), ('footer', 'footer')], max_length=10, verbose_name='location')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('site', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
            ],
            options={
                'verbose_name': 'section',
                'verbose_name_plural': 'section',
            },
        ),
        migrations.AddField(
            model_name='post',
            name='tags',
            field=models.ManyToManyField(to='web.tag', verbose_name='tags'),
        ),
        migrations.AddField(
            model_name='post',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.template', verbose_name='template'),
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100, verbose_name='label')),
                ('url', models.URLField(blank=True, null=True, verbose_name='URL')),
                ('order', models.IntegerField(default=0, verbose_name='order')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.menu')),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.post', verbose_name='post')),
            ],
            options={
                'verbose_name': 'menu item',
                'verbose_name_plural': 'menu items',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='web.post')),
                ('site', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
            ],
            options={
                'verbose_name': 'comment',
                'verbose_name_plural': 'comments',
            },
        ),
    ]
